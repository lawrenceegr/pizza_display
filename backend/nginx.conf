events {
    worker_connections 1024;  # The number of simultaneous connections per worker process
}

http {
    server {
        listen 80;
        server_name localhost; # Change this to your domain if applicable

        # Enable CORS for all services
        add_header 'Access-Control-Allow-Origin' '*' always;  # Allow all origins
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;  # Allowed methods
        add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization, X-Requested-With' always;  # Allowed headers
        add_header 'Access-Control-Allow-Credentials' 'true' always;  # Allow credentials if needed

        # Proxy requests to the Auth Service
        location /api/auth/ {
            proxy_pass http://auth-service:3001/;
            proxy_set_header Authorization $http_authorization;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }

        # Proxy requests to the Order Service
        location /api/orders/ {
            proxy_pass http://order-service:3002/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }

        # Proxy requests to the Product Service
        location /api/products/ {
            proxy_pass http://product-service:3003/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }

        # Handle OPTIONS requests (pre-flight requests for CORS)
        location /api/ {
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization, X-Requested-With';
                add_header 'Access-Control-Allow-Credentials' 'true';
                return 204;  # No content for pre-flight
            }
        }

        # Serve static files from the Next.js frontend
        location / {
            root /path/to/nextjs/build;  # Replace with your Next.js build directory
            index index.html;
            try_files $uri /index.html; # Handle client-side routing
        }

        # Error handling
        error_page 404 /404.html;
        location = /404.html {
            root /path/to/nextjs/build;
        }
    }
}
