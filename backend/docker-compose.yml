version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: postgres-db
    environment:
      POSTGRES_USER: ecommerce_user
      POSTGRES_PASSWORD: Panama@500
      POSTGRES_DB: food_ecommerce
    ports:
      - "5432:5432"

  auth-service:
    build:
      context: ./auth-service
    image: food-ecommerce/auth-service:latest
    container_name: auth-service
    environment:
      - DB_USER=ecommerce_user
      - DB_PASSWORD=Panama@500
      - DB_HOST=postgres
      - DB_NAME=food_ecommerce
      - DB_PORT=5432
      - JWT_SECRET=gF5tBNILj7XWpV4YrjM6dL8aP9cE1n2o3s4d5f6g7h8j9k
    ports:
      - "3001:3001"
    depends_on:
      - postgres

  order-service:
    build:
      context: ./order-service
    image: food-ecommerce/order-service:latest
    container_name: order-service
    environment:
      - DB_USER=ecommerce_user
      - DB_PASSWORD=Panama@500
      - DB_HOST=postgres
      - DB_NAME=food_ecommerce
      - DB_PORT=5432
      - ORDER_PORT=3002
    ports:
      - "3002:3002"
    depends_on:
      - postgres

  product-service:
    build:
      context: ./product-service
    image: food-ecommerce/product-service:latest
    container_name: product-service
    environment:
      - DB_USER=ecommerce_user
      - DB_PASSWORD=Panama@500
      - DB_HOST=postgres
      - DB_NAME=food_ecommerce
      - DB_PORT=5432
      - PRODUCT_PORT=3003
    ports:
      - "3003:3003"
    depends_on:
      - postgres

  nginx:
    build:
      context: .
      dockerfile: Dockerfile.nginx
    image: food-ecommerce/nginx:latest
    container_name: nginx-proxy
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - auth-service
      - order-service
      - product-service
